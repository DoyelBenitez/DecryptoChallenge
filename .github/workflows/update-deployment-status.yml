name: Update Deployment Status Badge

on:
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch:

permissions:
  contents: read
  deployments: read 

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get latest deployment status from GitHub (master branch)
        id: deployment-status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Obtener el ID del despliegue más reciente
          DEPLOYMENTS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/deployments?ref=refs/heads/master")
          echo "Deployments Response: $DEPLOYMENTS"
          DEPLOYMENT_ID=$(echo "$DEPLOYMENTS" | jq -r '.[0].id')
          echo "Deployment ID: $DEPLOYMENT_ID"
          
          # Verificar si se obtuvo un ID válido
          if [[ -z "$DEPLOYMENT_ID" || "$DEPLOYMENT_ID" == "null" ]]; then
            STATUS="unknown"
          else
            # Obtener el estado del despliegue
            STATUSES=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/${{ github.repository }}/deployments/$DEPLOYMENT_ID/statuses")
            echo "Deployment Statuses Response: $STATUSES"
            STATUS=$(echo "$STATUSES" | jq -r '.[0].state // "unknown"')
          }
      
          echo "Deployment Status: $STATUS"
          echo "status=$STATUS" >> $GITHUB_ENV

      - name: Update README with deployment badge
        run: |
          STATUS=${{ env.status }}
          if [[ "$STATUS" == "active" ]]; then
            COLOR="brightgreen"
          elif [[ "$STATUS" == "in_progress" ]]; then
            COLOR="yellow"
          else
            COLOR="red"
          fi
          BADGE_URL="https://img.shields.io/badge/deployment-$STATUS-$COLOR"
          sed -i 's|!\[Deployment Status\](.*)|![Deployment Status]('"$BADGE_URL"')|' README.md

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "github-actions@github.com"
          git config --local user.name "GitHub Actions"
          git add README.md
          git commit -m "Update deployment status badge" --allow-empty
          git pull origin master --rebase
          git push origin master
