name: Update Deployment Status Badge

on:
  schedule:
    - cron: '*/60 * * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-readme:
    runs-on: ubuntu-latest
    env:
      HEALTH_CHECK_URL: "https://decryptochallenge-production.up.railway.app/challenge/api/actuator/health"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Verifica el health status de la APP
        id: health_check
        run: |
          # Intentar obtener el código de estado HTTP de la aplicación
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$HEALTH_CHECK_URL")
          echo "Primer intento - HTTP Status Code: $HTTP_STATUS"
          
          # Si el primer intento no es 200, esperar 15 segundos
          if [ "$HTTP_STATUS" -ne 200 ]; then
            echo "Primer intento fallido. Esperando 15 segundos para reintentar..."
            sleep 15
            HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$HEALTH_CHECK_URL")
            echo "Segundo intento - HTTP Status Code: $HTTP_STATUS"
          fi

          if [ "$HTTP_STATUS" -eq 200 ]; then
            STATUS="Desplegado"
            COLOR="brightgreen"
          else
            STATUS="Caido"
            COLOR="red"
          fi

          echo "Application Status: $STATUS"
          echo "status=$STATUS" >> $GITHUB_ENV
          echo "color=$COLOR" >> $GITHUB_ENV

      - name: Verificar si es necesario actualizar el readme
        id: check_readme
        run: |
          BADGE_URL="https://img.shields.io/badge/Estado-${{ env.status }}-${{ env.color }}"
          if grep -q "$BADGE_URL" README.md; then
            echo "SKIP_UPDATE=true" >> $GITHUB_ENV
          else
            echo "SKIP_UPDATE=false" >> $GITHUB_ENV
          fi
          echo "Es necesario actualizar el README: $SKIP_UPDATE"
          
      - name: Actualizar el readme
        if: env.SKIP_UPDATE == 'false'
        run: |
          STATUS=${{ env.status }}
          COLOR=${{ env.color }}
          BADGE_URL="https://img.shields.io/badge/Estado-$STATUS-$COLOR"
          # Reemplazar o agregar el badge en README.md
          if grep -q "!\[Deployment Status\]" README.md; then
            # Reemplazar el badge existente
            sed -i 's|!\[Deployment Status\](.*)|![Deployment Status]('"$BADGE_URL"')|' README.md
          else
            # Agregar el badge si no existe
            echo '![Deployment Status]('"$BADGE_URL"')' >> README.md
          fi

      - name: Commit and push
        if: env.SKIP_UPDATE == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "github-actions@github.com"
          git config --local user.name "GitHub Actions"
          git add README.md
          git commit -m "Actualizar badge de estado de despliegue" || echo "No hay cambios para commitear"
          git pull origin master --rebase
          git push origin master
